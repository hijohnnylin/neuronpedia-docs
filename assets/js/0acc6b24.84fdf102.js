"use strict";(self.webpackChunkneuronpedia_docs=self.webpackChunkneuronpedia_docs||[]).push([[634],{187:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var r=t(4848),s=t(8453);const o={sidebar_position:2},i="Steering Using SAE Features",a={id:"steering",title:"Steering Using SAE Features",description:"Neuronpedia supports steering the output of models by increasing or decreasing the strength of SAE features.",source:"@site/docs/steering.md",sourceDirName:".",slug:"/steering",permalink:"/steering",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"SAE Features",permalink:"/features"},next:{title:"Embed Features (iframe)",permalink:"/embed-iframe"}},d={},p=[];function u(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"steering-using-sae-features",children:"Steering Using SAE Features"}),"\n",(0,r.jsx)(n.p,{children:"Neuronpedia supports steering the output of models by increasing or decreasing the strength of SAE features."}),"\n",(0,r.jsx)(n.p,{children:'You can think of this as Anthropic\'s "Golden Gate Claude" demonstration, except that you can use any feature, not just features about the Golden Gate Bridge.'}),"\n",(0,r.jsxs)(n.p,{children:["Currently, ",(0,r.jsx)(n.code,{children:"Gemma-2B"}),", ",(0,r.jsx)(n.code,{children:"Gemma-2B-IT"})," and ",(0,r.jsx)(n.code,{children:"GPT2-Small"})," are supported, and we're adding more support soon:\n",(0,r.jsx)(n.a,{href:"https://www.neuronpedia.org/steer",children:(0,r.jsx)(n.code,{children:"https://www.neuronpedia.org/steer"})})]}),"\n",(0,r.jsxs)(n.p,{children:["The API is documented at our ",(0,r.jsx)(n.a,{href:"http://localhost:3000/api-doc",children:"API Docs"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"There is an hourly rate limit of 100 steers per user."}),"\n",(0,r.jsx)(n.p,{children:"Python Example Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'import json\nimport requests\n\n# prompt and model\nPROMPT = "The most iconic structure on Earth is"\nMODEL_ID = "gemma-2b"\n\n# feature about San Francisco\nFEATURE = {"modelId": "gemma-2b", "layer": "6-res-jb", "index": 10200, "strength": 5}\n\n# other settings\nTEMPERATURE = 0.2\nN_TOKENS = 16\nFREQ_PENALTY = 1.0\nSEED = 16\nSTRENGTH_MULTIPLIER = 4\n\n# make the request\nurl = "https://www.neuronpedia.org/api/steer"\ndata = {\n    "prompt": PROMPT,\n    "modelId": MODEL_ID,\n    "features": [FEATURE],\n    "temperature": TEMPERATURE,\n    "n_tokens": N_TOKENS,\n    "freq_penalty": FREQ_PENALTY,\n    "seed": SEED,\n    "strength_multiplier": STRENGTH_MULTIPLIER,\n}\nheaders = {"Content-Type": "application/json"}\n\n# send request\nresponse = requests.post(url, json=data, headers=headers)\njson_response = response.json()\nformatted_response = json.dumps(json_response, indent=4)\nprint(formatted_response)\n'})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);